/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        if(root==null)return 0;
        int dia[]=new int[1];
        inorder(root,dia);
        return dia[0]-1;
    }
    public int inorder(TreeNode root,int dia[]){
        if(root==null)return 0;
        
        int l=inorder(root.left,dia);
        int r=inorder(root.right,dia);
        dia[0]=Math.max(dia[0],l+r+1);
        
        return Math.max(l,r)+1;
        
    }
}
